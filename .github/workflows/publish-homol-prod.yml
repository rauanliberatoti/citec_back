name: Publish homol/prod backend

on:
  create:
    branches:    
      - '*homol*'
      - '*prod*'      
  pull_request:
    types:
      - closed  
    branches:    
      - '*homol*'
      - '*prod*'  
env:
    GIT_DEPTH: '3'
    VERSAO: '1.10'
    ServerPathhomol: "/opt/sistemas/homol/ictec_backend"
    CECompressedhomol: build-ictec-homol.tar.gz
    ServerPathprod: "/opt/sistemas/prod/ictec_back"
    CECompressedprod: build-ictec-prod.tar.gz

jobs:
  build_and_deploy_homol:
     runs-on: ubuntu-latest
     if:  ${{contains(github.ref, 'ictec-homol')}}
     timeout-minutes: 60
     steps:
     - uses: actions/checkout@v3
     - uses: actions/cache@v3
       with:
        path: vendor
        key: "${{ github.ref }}"             
     - run: |
        php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" && \
        php composer-setup.php && \
        php composer.phar install -o --ignore-platform-reqs
     - uses: webfactory/ssh-agent@v0.7.0
       with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY_ICTEC }}
     - run: echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
     - run: mkdir pacote
     - run: cp -au .env.homol .env
     - run: ls -lha
     - run: mv .editorconfig pacote/.editorconfig
     - run: mv .env pacote/.env
     - run: mv config pacote/config
     - run: mv app pacote/app
     - run: mv vendor pacote/vendor
     - run: mv artisan pacote/artisan
     - run: mv bootstrap pacote/bootstrap
     - run: mv composer.json pacote/composer.json
     - run: mv composer.lock pacote/composer.lock
     - run: mv database pacote/database
     - run: mv lang pacote/lang 
     - run: mv package.json pacote/package.json
     - run: mv phpunit.xml pacote/phpunit.xml
     - run: mv public pacote/public
     - run: mv resources pacote/resources
     - run: mv routes pacote/routes
     - run: mv tests pacote/tests
     - run: mv vite.config.js pacote/vite.config.js
     - run: tar -czf ${CECompressedhomol} -C pacote/ .
     - run: scp -v ${CECompressedhomol} ${{ secrets.DEPLOY_USER_ICTEC }}@${{ secrets.DEPLOY_HOST_ICTEC }}:/tmp
     - run: ssh ${{ secrets.DEPLOY_USER_ICTEC }}@${{ secrets.DEPLOY_HOST_ICTEC }} "mkdir -p /tmp/deploy && tar -xzf /tmp/${CECompressedhomol} -C /tmp/deploy/ && rsync -a /tmp/deploy/ ${ServerPathhomol} && rm -rf /tmp/deploy/* && rm -rf /tmp/${CECompressedhomol} && cd /opt/scripts/homol/embalagens-backend-homol && docker-compose down && docker-compose up -d "



  build_and_deploy_prod:
     runs-on: ubuntu-latest
     if:  ${{contains(github.ref, 'embalagem-prod')}}
     timeout-minutes: 60
     steps:
     - uses: actions/checkout@v3
     - uses: actions/cache@v3
       with:
        path: vendor
        key: "${{ github.ref }}"             
     - run: |
        php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" && \
        php composer-setup.php && \
        php composer.phar install -o --ignore-platform-reqs
     - uses: webfactory/ssh-agent@v0.7.0
       with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY_EMBALAGEM }}
     - run: echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
     - run: mkdir pacote
     - run: cp -au .env.prod .env
     - run: ls -lha
     - run: mv .editorconfig pacote/.editorconfig
     - run: mv .env pacote/.env
     - run: mv config pacote/config
     - run: mv app pacote/app
     - run: mv vendor pacote/vendor
     - run: mv artisan pacote/artisan
     - run: mv bootstrap pacote/bootstrap
     - run: mv composer.json pacote/composer.json
     - run: mv composer.lock pacote/composer.lock
     - run: mv database pacote/database
     - run: mv lang pacote/lang 
     - run: mv public pacote/public
     - run: mv package-lock.json pacote/package-lock.json
     - run: mv package.json pacote/package.json
     - run: mv phpunit.xml pacote/phpunit.xml
     - run: mv postcss.config.js pacote/postcss.config.js
     - run: mv resources pacote/resources
     - run: mv routes pacote/routes
     - run: mv tailwind.config.js pacote/tailwind.config.js
     - run: mv tests pacote/tests
     - run: mv vite.config.js pacote/vite.config.js
     - run: tar -czf ${CECompressedprod} -C pacote/ .
     - run: scp -v build-casaembalagem-prod.tar.gz ${{ secrets.DEPLOY_USER_EMBALAGEM }}@${{ secrets.DEPLOY_HOST_EMBALAGEM }}:/tmp
     - run: ssh ${{ secrets.DEPLOY_USER_EMBALAGEM }}@${{ secrets.DEPLOY_HOST_EMBALAGEM }} " tar -xzf /tmp/${CECompressedprod} -C /tmp/deploy/ && rsync -a /tmp/deploy/ ${ServerPathprod} && rm -rf /tmp/deploy/* && rm -rf /tmp/${CECompressedprod} && cd /opt/scripts/prod/embalagens-backend-prod && docker-compose down && docker-compose up -d "